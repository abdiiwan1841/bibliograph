dist: trusty
language: php

services:
  - mysql
  - docker

addons:
  apt:
    update: true

cache:
  directories:
    - node_modules
    - $HOME/.composer/cache/files
    - src/vcslib

stages:
  - name: tests
  - name: packaging
    if: (NOT type IN (pull_request))
  - name: docker
    if: (NOT type IN (pull_request))
  - name: deploy
    if: (NOT type IN (pull_request))

before_install:
  - echo "travis_fold:start:install_prerequisites"
  - sudo apt-get install -y bibutils zip
  - PHPVERSION=$(phpenv version-name)
  - sudo add-apt-repository -y ppa:ondrej/php && sudo apt-get update
  - sudo apt-get install -y php${PHPVERSION}-xsl php${PHPVERSION}-intl
  - sudo apt-get install -y yaz libyaz4-dev
  - pear channel-update pear.php.net && yes $'\n' | pecl install yaz && pear install Structures_LinkedList-0.2.2 && pear install File_MARC
  - if php -i | grep yaz --quiet && echo '<?php exit(function_exists("yaz_connect")?0:1);' | php ; then echo "YAZ is installed"; else echo "YAZ installation failed"; exit 1; fi;
  - mysql -e 'CREATE DATABASE IF NOT EXISTS tests;'
  - cp install/travis/app.conf.toml src/server/config
  - if [[ -f package-lock.json ]]; then rm package-lock.json; fi
  - echo "travis_fold:end:install_prerequisites"

install:
  - echo "travis_fold:start:install_dependencies"
  - if [[ "$PHPVERSION" == "7.0" ]]; then export COMPOSER=$(pwd)/install/php7.0/composer.json; fi
  - npm install
  - echo "travis_fold:end:install_dependencies"

script: skip

jobs:
  include:
    - stage: tests
      name: "Run unit and functional tests"
      php:
        - "7.2"
        - "7.3"
        - "7.0"
      script: test/script/unit-functional.sh
    - # parallel
      name: "Run API tests using server"
      php:
        - "7.2"
        - "7.3"
        - "7.0"
      script: test/script/api.sh

    - stage: packaging
      name: "Create a distributable package"
      php: "7.3"
      script: npm run dist-build
    - # php 7.0 legacy package
      name: "Create a PHP7.0-compatible legacy package"
      php: "7.0"
      script: npm run dist-build-php70

    - stage: docker
      name: "Create a docker image and push it to the docker hub"
      php: "7.2"
      deploy:
        provider: script
        script: build/script/docker-push.sh
        skip_cleanup: true
        on:
          branch: master

    - stage: deploy
      name: "Deploy to demo server"
      script: build/script/deploy.sh

after_failure:
  - echo " === application logs ==="
  - echo "travis_fold:start:logs"
  - cat src/server/runtime/logs/app.log
  - if [[ -f src/server/runtime/logs/error.log ]]; then cat src/server/runtime/logs/error.log; fi
  - echo "travis_fold:end:logs"
