/* ************************************************************************

  Bibliograph. The open source online bibliographic data manager

  http://www.bibliograph.org

  Copyright:
    2003-2020 Christian Boulanger

  License:
    MIT license
    See the LICENSE file in the project's top-level directory for details.

  Authors:
    Christian Boulanger (@cboulanger) info@bibliograph.org

************************************************************************ */


qx.Class.define("bibliograph.ui.window.SearchHelpWindow",
{
  extend : qx.ui.window.Window,
  construct : function() {
    this.base(arguments);
    this.__qxtCreateUI();
  },
  members : {
    __qxtCreateUI : function() {
      //connecting autogenerated id with 'this'
      var searchHelpWindow = this;
      searchHelpWindow.setPadding(5);
      searchHelpWindow.setWidth(400);
      searchHelpWindow.setShowMaximize(false);
      searchHelpWindow.setCaption(this.tr("Search Help Window"));
      searchHelpWindow.setShowMinimize(false);
      searchHelpWindow.setHeight(500);
      qx.event.message.Bus.getInstance().subscribe("logout", function(e) {
        this.close();
      }, this);
      var qxVbox1 = new qx.ui.layout.VBox(null, null, null);
      searchHelpWindow.setLayout(qxVbox1);
      var helpPane = new qx.ui.embed.Html(null);
      helpPane.setOverflowY("auto");
      searchHelpWindow.add(helpPane, {
        flex : 1
      });
      helpPane.addListener("appear", function(e) {
        var app = this.getApplication();
        app.getRpcClient("reference").send("getSearchHelpHtml", [app.getDatasource()], function(result) {
          helpPane.setHtml(result);
        }, this);
      }, this);
      helpPane.addListener("click", function(e) {
        var node = e.getOriginalTarget();
        var app = this.getApplication();
        if (qx.dom.Node.getName(node) === "span" && app.getInsertTarget()) {
          var term = qx.dom.Node.getText(node);
          var insertTarget = app.getInsertTarget();
          insertTarget.setValue(qx.lang.String.clean(insertTarget.getValue() || "") + " " + term + " ");
          insertTarget.focus();
        }
      }, this);
    }
  }
});
