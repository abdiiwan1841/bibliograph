#!/bin/bash

# This tests database setup and migrations

./tool/dev/check-setup
source ./.env
./tool/lib/functions.sh

set -o errexit # Exit on error

alias mysql=tool/dev/mysql-client
alias codecept=tool/dev/php src/server/vendor/bin/codecept
YII_CMD="yii-test"
CPT_CMD="vendor/bin/codecept"
CPT_ARGS=""
SERVER_PATH="src/server"
SERVER_PORT="8099"
SERVER_CMD="yii serve 127.0.0.1:$SERVER_PORT -t=@app/tests"
BIBLIOGRAPH2_SQL_DUMP=test/data/bibliograph2.local.sql
#BIBLIOGRAPH2_SQL_DUMP=test/data/bibliograph-hu.local.sql

log_heading "Testing new installation"

echo "Creating empty database ..."
mysql -uroot -e "DROP DATABASE tests;" || true
mysql -uroot -e "CREATE DATABASE tests;"
echo "Calling application setup service ..."
${CPT_CMD} run api AASetupControllerCest --env setup $CPT_ARGS || exit $?
${CPT_CMD} run api AASetupControllerCest --env testing $CPT_ARGS || exit $?
echo

log_heading "Testing upgrade from 3.0.0-alpha to 3.0.0..."

${YII_CMD} migrate/create app\\migrations\\schema\\create_post_table --interactive=0
${CPT_CMD} run api AASetupControllerCest --env upgradev3 $CPT_ARGS
exitcode=$?
popd > /dev/null
rm src/server/migrations/schema/*Create_post_table.php
if [ "$exitcode" -ne "0" ]; then
   exit $exitcode;
fi
echo

log_heading "Test upgrade from v2 version"

echo "Clearing log file and database..."
[[ -f runtime/logs/app.log ]] && rm runtime/logs/app.log
mysql -uroot -e "DROP DATABASE tests;"
mysql -uroot -e "CREATE DATABASE tests;"
echo "Importing Bibliograph v2 data..."
mysql -uroot tests < $BIBLIOGRAPH2_SQL_DUMP
echo "Testing upgrade from v2..."
pushd $SERVER_PATH > /dev/null
migration_path="app\\migrations\\schema\\bibliograph_datasource"
${YII_CMD} migrate/create ${migration_path}\\new_datasource_migration --migrationNamespaces=${migration_path} --interactive=0
${CPT_CMD} run api AASetupControllerCest --env upgradev2 $CPT_ARGS || exit $?
exitcode=$?
rm migrations/schema/bibliograph_datasource/*New_datasource_migration.php
if [ "$exitcode" -ne "0" ]; then
   exit $exitcode;
fi
${CPT_CMD} run api AASetupControllerCest --env testing $CPT_ARGS || exit $?
echo
echo "Cleaning up database ..."
#mysql -uroot -e "DROP DATABASE tests;"
#mysql -uroot -e "CREATE DATABASE tests;"

exit 0
